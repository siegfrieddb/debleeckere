{"version":3,"sources":["webpack:///./src/templates/post.jsx","webpack:///./src/components/PostHeader/PostHeader.jsx","webpack:///./src/components/PostTags/PostTags.jsx","webpack:///./src/components/AuthorLink/AuthorLink.jsx","webpack:///./src/components/MainHeader/MainHeader.jsx","webpack:///./src/components/AuthorImage/AuthorImage.jsx","webpack:///./src/components/AuthorMeta/AuthorMeta.jsx","webpack:///./src/components/AuthorLocation/AuthorLocation.jsx","webpack:///./src/components/AuthorWebsite/AuthorWebsite.jsx","webpack:///./src/components/AuthorInfo/AuthorInfo.jsx","webpack:///./src/components/PostShare/PostShare.jsx","webpack:///./src/components/GhostSubscribe/GhostSubscribe.jsx","webpack:///./src/components/ReadNext/ReadNext.jsx"],"names":["formatReadNext","value","path","fields","slug","title","frontmatter","cover","excerpt","PostTemplate","state","menuOpen","handleOnClick","evt","stopPropagation","_this","closeMenu","openMenu","handleOnClose","setState","render","_this$props","this","props","location","data","_this$props$pageConte","pageContext","next","prev","postNode","markdownRemark","post","result","id","category_id","config","postDefaultCategoryID","parsePost","date","author","tags","className","post_class","authorData","AuthorModel","getAuthor","authors","edges","blogAuthorId","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_26__","_components_Drawer_Drawer__WEBPACK_IMPORTED_MODULE_9__","isOpen","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","siteTitle","_components_SEO_SEO__WEBPACK_IMPORTED_MODULE_3__","postPath","postSEO","_components_Navigation_Navigation__WEBPACK_IMPORTED_MODULE_10__","onClose","_components_SiteWrapper_SiteWrapper__WEBPACK_IMPORTED_MODULE_11__","_components_MainHeader_MainHeader__WEBPACK_IMPORTED_MODULE_5__","_components_MainNav_MainNav__WEBPACK_IMPORTED_MODULE_6__","_components_BlogLogo_BlogLogo__WEBPACK_IMPORTED_MODULE_7__","logo","siteLogo","_components_MenuButton_MenuButton__WEBPACK_IMPORTED_MODULE_8__","navigation","siteNavigation","onClick","_components_MainContent_MainContent__WEBPACK_IMPORTED_MODULE_12__","_components_PostFormatting_PostFormatting__WEBPACK_IMPORTED_MODULE_14__","_components_PostHeader_PostHeader__WEBPACK_IMPORTED_MODULE_13__","_components_PostDate_PostDate__WEBPACK_IMPORTED_MODULE_15__","_components_PostTags_PostTags__WEBPACK_IMPORTED_MODULE_22__","prefix","dangerouslySetInnerHTML","__html","html","_components_PostFooter_PostFooter__WEBPACK_IMPORTED_MODULE_16__","_components_AuthorImage_AuthorImage__WEBPACK_IMPORTED_MODULE_17__","_components_AuthorInfo_AuthorInfo__WEBPACK_IMPORTED_MODULE_18__","_components_PostShare_PostShare__WEBPACK_IMPORTED_MODULE_19__","pathname","_components_GhostSubscribe_GhostSubscribe__WEBPACK_IMPORTED_MODULE_20__","_components_Disqus_Disqus__WEBPACK_IMPORTED_MODULE_25__","_components_ReadNext_ReadNext__WEBPACK_IMPORTED_MODULE_21__","_components_Footer_Footer__WEBPACK_IMPORTED_MODULE_23__","copyright","promoteGatsby","React","Component","pageQuery","PostHeader","children","PostTags","map","tag","index","arr","key","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","_","kebabCase","length","AuthorLink","name","url","react__WEBPACK_IMPORTED_MODULE_2___default","MainHeader","classes","classNames","no-cover","style","backgroundImage","AuthorImage","_this$props$author","image","href","AuthorMeta","AuthorLocation","AuthorWebsite","Bio","bio","morePostsUrl","AuthorInfo","uid","authorInfoUrl","_AuthorLink_AuthorLink__WEBPACK_IMPORTED_MODULE_8__","_components_AuthorMeta_AuthorMeta__WEBPACK_IMPORTED_MODULE_5__","_AuthorLocation_AuthorLocation__WEBPACK_IMPORTED_MODULE_6__","_AuthorWebsite_AuthorWebsite__WEBPACK_IMPORTED_MODULE_7__","PostShare","siteUrl","pathPrefix","FacebookShareButton","ShareButtons","GooglePlusShareButton","TwitterShareButton","display","fontSize","quote","GhostSubscribe","subscribers","blog","ReadNextStory","styles","ReadNext"],"mappings":"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","file":"component---src-templates-post-jsx-298dbccebd6c281a0a77.js","sourcesContent":["import { graphql } from \"gatsby\";\r\nimport React from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport SEO from \"../components/SEO/SEO\";\r\nimport config from \"../../data/SiteConfig\";\r\nimport MainHeader from \"../components/MainHeader/MainHeader\";\r\nimport MainNav from \"../components/MainNav/MainNav\";\r\nimport BlogLogo from \"../components/BlogLogo/BlogLogo\";\r\nimport MenuButton from \"../components/MenuButton/MenuButton\";\r\nimport Drawer from \"../components/Drawer/Drawer\";\r\nimport Navigation from \"../components/Navigation/Navigation\";\r\nimport SiteWrapper from \"../components/SiteWrapper/SiteWrapper\";\r\nimport MainContent from \"../components/MainContent/MainContent\";\r\nimport PostHeader from \"../components/PostHeader/PostHeader\";\r\nimport PostFormatting from \"../components/PostFormatting/PostFormatting\";\r\nimport PostDate from \"../components/PostDate/PostDate\";\r\nimport PostFooter from \"../components/PostFooter/PostFooter\";\r\nimport AuthorImage from \"../components/AuthorImage/AuthorImage\";\r\nimport AuthorInfo from \"../components/AuthorInfo/AuthorInfo\";\r\nimport PostShare from \"../components/PostShare/PostShare\";\r\nimport GhostSubscribe from \"../components/GhostSubscribe/GhostSubscribe\";\r\nimport ReadNext from \"../components/ReadNext/ReadNext\";\r\nimport PostTags from \"../components/PostTags/PostTags\";\r\nimport Footer from \"../components/Footer/Footer\";\r\nimport AuthorModel from \"../models/author-model\";\r\nimport Disqus from \"../components/Disqus/Disqus\";\r\nimport Layout from \"../components/layout\";\r\n\r\nfunction parsePost(post, slug) {\r\n  const result = post;\r\n  if (!result.id) {\r\n    result.id = slug;\r\n  }\r\n  if (!result.id) {\r\n    result.category_id = config.postDefaultCategoryID;\r\n  }\r\n  return result;\r\n}\r\n\r\nconst formatReadNext = value => ({\r\n  path: value.fields.slug,\r\n  title: value.frontmatter.title,\r\n  cover: value.frontmatter.cover,\r\n  excerpt: value.excerpt\r\n});\r\n\r\nclass PostTemplate extends React.Component {\r\n  state = {\r\n    menuOpen: false\r\n  };\r\n\r\n  handleOnClick = evt => {\r\n      evt.stopPropagation();\r\n      if (this.state.menuOpen) {\r\n        this.closeMenu();\r\n      } else {\r\n        this.openMenu();\r\n    }\r\n  };\r\n\r\n  handleOnClose = evt => {\r\n    evt.stopPropagation();\r\n    this.closeMenu();\r\n  };\r\n\r\n  openMenu = () => {\r\n    this.setState({ menuOpen: true });\r\n  };\r\n\r\n  closeMenu = () => {\r\n    this.setState({ menuOpen: false });\r\n  };\r\n\r\n  render() {\r\n    const { location, data } = this.props;\r\n    const { slug, next, prev } = this.props.pageContext;\r\n    const postNode = this.props.data.markdownRemark;\r\n    const post = parsePost(postNode.frontmatter, slug);\r\n    const { cover, title, date, author, tags } = post;\r\n    const className = post.post_class ? post.post_class : \"post\";\r\n    const authorData = AuthorModel.getAuthor(\r\n      this.props.data.authors.edges,\r\n      author,\r\n      config.blogAuthorId\r\n    );\r\n    const getNextData = () => (next ? formatReadNext(data.next) : null);\r\n    const getPrevData = () => (prev ? formatReadNext(data.prev) : null);\r\n\r\n    return (\r\n      <Layout location={this.props.location}>\r\n        <Drawer className=\"post-template\" isOpen={this.state.menuOpen}>\r\n          <Helmet>\r\n            <title>{`${post.title} | ${config.siteTitle}`}</title>\r\n          </Helmet>\r\n          <SEO postPath={slug} postNode={postNode} postSEO />\r\n\r\n          {/* The blog navigation links */}\r\n          <Navigation config={config} onClose={this.handleOnClose} />\r\n\r\n          <SiteWrapper>\r\n            <MainHeader className=\"post-head\" cover={cover}>\r\n              <MainNav>\r\n                <BlogLogo logo={config.siteLogo} title={config.siteTitle} />\r\n                <MenuButton\r\n                  navigation={config.siteNavigation}\r\n                  onClick={this.handleOnClick}\r\n                />\r\n              </MainNav>\r\n            </MainHeader>\r\n            <MainContent>\r\n              <PostFormatting className={className}>\r\n                <PostHeader>\r\n                  <h1 className=\"post-title\">{title}</h1>\r\n                  <section className=\"post-meta\">\r\n                    <PostDate date={date} />\r\n                    <PostTags prefix=\" on \" tags={tags} />\r\n                  </section>\r\n                </PostHeader>\r\n\r\n                <section\r\n                  className=\"post-content\"\r\n                  dangerouslySetInnerHTML={{ __html: postNode.html }}\r\n                />\r\n\r\n                <PostFooter>\r\n                  <AuthorImage author={authorData} />\r\n                  <AuthorInfo prefix=\"/author\" author={authorData} />\r\n                  <PostShare\r\n                    postNode={postNode}\r\n                    postPath={location.pathname}\r\n                    config={config}\r\n                  />\r\n                  <GhostSubscribe />\r\n                  <Disqus postNode={postNode} />\r\n                </PostFooter>\r\n              </PostFormatting>\r\n            </MainContent>\r\n            <ReadNext next={getNextData()} prev={getPrevData()} />\r\n\r\n            {/* The tiny footer at the very bottom */}\r\n            <Footer\r\n              copyright={config.copyright}\r\n              promoteGatsby={config.promoteGatsby}\r\n            />\r\n          </SiteWrapper>\r\n        </Drawer>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\n/* eslint no-undef: \"off\" */\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug($slug: String!, $next: String, $prev: String) {\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      html\r\n      timeToRead\r\n      excerpt\r\n      frontmatter {\r\n        title\r\n        cover\r\n        date\r\n        category\r\n        tags\r\n        author\r\n      }\r\n      fields {\r\n        slug\r\n      }\r\n    }\r\n    # prev post data\r\n    prev: markdownRemark(fields: { slug: { eq: $prev } }) {\r\n      excerpt(pruneLength: 112)\r\n      frontmatter {\r\n        title\r\n        cover\r\n        date\r\n      }\r\n      fields {\r\n        slug\r\n      }\r\n    }\r\n    # next post data\r\n    next: markdownRemark(fields: { slug: { eq: $next } }) {\r\n      excerpt(pruneLength: 112)\r\n      frontmatter {\r\n        title\r\n        cover\r\n        date\r\n      }\r\n      fields {\r\n        slug\r\n      }\r\n    }\r\n    # authors\r\n    authors: allAuthorsJson {\r\n      edges {\r\n        node {\r\n          uid\r\n          name\r\n          image\r\n          url\r\n          bio\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default PostTemplate;\r\n","import React from \"react\";\r\nimport \"./PostHeader.css\";\r\n\r\nclass PostHeader extends React.Component {\r\n  render() {\r\n    const { children } = this.props;\r\n    return <header className=\"post-header\">{children}</header>;\r\n  }\r\n}\r\n\r\nexport default PostHeader;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\nimport { Link } from \"gatsby\";\r\nimport \"./PostTags.css\";\r\n\r\nclass PostTags extends Component {\r\n  render() {\r\n    const { prefix, tags } = this.props;\r\n    if (tags) {\r\n      return (\r\n        <span>\r\n          {prefix}\r\n          {tags.map((tag, index, arr) => (\r\n            <span key={tag}>\r\n              <Link key={tag} to={`/tags/${_.kebabCase(tag)}`}>\r\n                {tag}\r\n              </Link>\r\n              {index !== arr.length - 1 ? \", \" : \"\"}\r\n            </span>\r\n          ))}\r\n        </span>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default PostTags;\r\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport \"./AuthorLink.css\";\r\n\r\nclass AuthorLink extends React.Component {\r\n  render() {\r\n    const { name, url } = this.props;\r\n    if (name && url) {\r\n      return <Link to={url}>{name}</Link>;\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default AuthorLink;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport \"./MainHeader.css\";\r\n\r\nclass MainHeader extends React.Component {\r\n  render() {\r\n    const { children, cover } = this.props;\r\n\r\n    const classes = classNames(\"main-header\", this.props.className, {\r\n      \"no-cover\": !cover\r\n    });\r\n\r\n    const getStyle = () => {\r\n      if (cover) {\r\n        return { backgroundImage: `url(\"${cover}\")` };\r\n      }\r\n      return null;\r\n    };\r\n\r\n    return (\r\n      <header className={classes} style={getStyle()}>\r\n        {children}\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainHeader;\r\n","import React from \"react\";\r\nimport \"./AuthorImage.css\";\r\n\r\nclass AuthorImage extends React.Component {\r\n  render() {\r\n    const { name, image, url } = this.props.author;\r\n    if (image) {\r\n      return (\r\n        <figure className=\"author-image\">\r\n          <a\r\n            className=\"img\"\r\n            href={url}\r\n            style={{ backgroundImage: `url(\"${image}\")` }}\r\n          >\r\n            <span className=\"hidden\">{`${name}'s Picture`}</span>\r\n          </a>\r\n        </figure>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default AuthorImage;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport \"./AuthorMeta.css\";\r\n\r\nclass AuthorMeta extends React.Component {\r\n  render() {\r\n    const { children, className } = this.props;\r\n    const classes = classNames(\"author-meta\", className);\r\n\r\n    return <div className={classes}>{children}</div>;\r\n  }\r\n}\r\n\r\nexport default AuthorMeta;\r\n","import React from \"react\";\r\n\r\nclass AuthorLocation extends React.Component {\r\n  render() {\r\n    const { location } = this.props;\r\n    if (location) {\r\n      return <span className=\"author-location icon-location\">{location}</span>;\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default AuthorLocation;\r\n","import React from \"react\";\r\n\r\nclass AuthorWebsite extends React.Component {\r\n  render() {\r\n    const { url } = this.props;\r\n    if (url) {\r\n      return (\r\n        <span className=\"author-link icon-link\">\r\n          <a href={url}>{url}</a>\r\n        </span>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default AuthorWebsite;\r\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport \"./AuthorInfo.css\";\r\nimport AuthorMeta from \"../../components/AuthorMeta/AuthorMeta\";\r\nimport AuthorLocation from \"../AuthorLocation/AuthorLocation\";\r\nimport AuthorWebsite from \"../AuthorWebsite/AuthorWebsite\";\r\nimport AuthorLink from \"../AuthorLink/AuthorLink\";\r\n\r\nconst Bio = props => {\r\n  const { bio, morePostsUrl } = props;\r\n  if (bio) {\r\n    return <p>{bio}</p>;\r\n  }\r\n  return (\r\n    <p>\r\n      Read <Link to={morePostsUrl}>more posts</Link> by this author.\r\n    </p>\r\n  );\r\n};\r\n\r\nclass AuthorInfo extends React.Component {\r\n  render() {\r\n    const { prefix } = this.props;\r\n    const { uid, name, image, bio, url, location } = this.props.author;\r\n    const authorInfoUrl = prefix ? `${prefix}/${uid}` : uid;\r\n    if (image) {\r\n      return (\r\n        <section className=\"author\">\r\n          <h4>\r\n            <AuthorLink url={authorInfoUrl} name={name} />\r\n          </h4>\r\n          <Bio bio={bio} morePostsUrl={authorInfoUrl} />\r\n          <AuthorMeta>\r\n            <AuthorLocation location={location} />\r\n            <AuthorWebsite url={url} />\r\n          </AuthorMeta>\r\n        </section>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default AuthorInfo;\r\n","import React from \"react\";\r\nimport { ShareButtons } from \"react-share\";\r\nimport \"./PostShare.css\";\r\n\r\nconst formatSiteUrl = (siteUrl, pathPrefix, path) =>\r\n  siteUrl + (pathPrefix === \"/\" ? \"\" : pathPrefix) + path;\r\n\r\n// const getCover = post => {\r\n//   const { cover } = post;\r\n//   if (cover && cover.childImageSharp && cover.childImageSharp.original) {\r\n//     return cover.childImageSharp.original.src;\r\n//   }\r\n//   return \"\";\r\n// };\r\n\r\nclass PostShare extends React.Component {\r\n  render() {\r\n    const { postNode, postPath, config } = this.props;\r\n    const post = postNode.frontmatter;\r\n    const url = formatSiteUrl(config.siteUrl, config.pathPrefix, postPath);\r\n\r\n    const {\r\n      FacebookShareButton,\r\n      GooglePlusShareButton,\r\n      // PinterestShareButton,\r\n      TwitterShareButton\r\n    } = ShareButtons;\r\n\r\n    return (\r\n      <section className=\"share\">\r\n        <h4>Share this post</h4>\r\n        <div style={{ display: \"flex\" }}>\r\n          <TwitterShareButton url={url} title={post.title}>\r\n            <a className=\"icon-twitter\" style={{ fontSize: \"1.4em\" }}>\r\n              <span className=\"hidden\">Twitter</span>\r\n            </a>\r\n          </TwitterShareButton>\r\n          <FacebookShareButton url={url} quote={post.title}>\r\n            <a className=\"icon-facebook\" style={{ fontSize: \"1.4em\" }}>\r\n              <span className=\"hidden\">Facebook</span>\r\n            </a>\r\n          </FacebookShareButton>\r\n          {/* <PinterestShareButton */}\r\n          {/* url={url} */}\r\n          {/* media={formatSiteUrl( */}\r\n          {/* config.siteUrl, */}\r\n          {/* config.pathPrefix, */}\r\n          {/* getCover(post) */}\r\n          {/* )} */}\r\n          {/* description={postNode.excerpt} */}\r\n          {/* > */}\r\n          {/* <a className=\"icon-pinterest\" style={{ fontSize: \"1.4em\" }}> */}\r\n          {/* <span className=\"hidden\">Pinterest</span> */}\r\n          {/* </a> */}\r\n          {/* </PinterestShareButton> */}\r\n          <GooglePlusShareButton url={url}>\r\n            <a className=\"icon-google-plus\" style={{ fontSize: \"1.4em\" }}>\r\n              <span className=\"hidden\">Google+</span>\r\n            </a>\r\n          </GooglePlusShareButton>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostShare;\r\n","import React from \"react\";\r\nimport \"./GhostSubscribe.css\";\r\n\r\nclass GhostSubscribe extends React.Component {\r\n  render() {\r\n    const { subscribers, blog } = this.props;\r\n    // const subscribeFormPlaceholder = \"Your email address\";\r\n    if (subscribers && blog) {\r\n      // Email subscribe form at the bottom of the page\r\n      return (\r\n        <section className=\"gh-subscribe\">\r\n          <h3 className=\"gh-subscribe-title\">Subscribe to {blog.title}</h3>\r\n          <p>Get the latest posts delivered right to your inbox.</p>\r\n          <span className=\"gh-subscribe-rss\">\r\n            or subscribe{\" \"}\r\n            <a href=\"http://cloud.feedly.com/#subscription/feed/{blog.url}/rss/\">\r\n              via RSS\r\n            </a>{\" \"}\r\n            with Feedly!\r\n          </span>\r\n        </section>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default GhostSubscribe;\r\n","import React, { Component } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { Link } from \"gatsby\";\r\nimport \"./ReadNext.css\";\r\n\r\nconst ReadNextStory = props => {\r\n  const { post } = props;\r\n  if (post) {\r\n    /** Limit words to 19 in GraphQL * */\r\n    const { path, cover, title, excerpt } = post;\r\n    const styles = cover ? { backgroundImage: `url(${cover}` } : null;\r\n    const classes = classNames(\"read-next-story\", props.className, {\r\n      \"no-cover\": !cover\r\n    });\r\n    return (\r\n      <Link className={classes} style={styles} to={path}>\r\n        <section className=\"post\">\r\n          <h2>{title}</h2>\r\n          <p>{excerpt}&hellip;</p>\r\n        </section>\r\n      </Link>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\n/**\r\n * Links to Previous/Next posts\r\n */\r\nclass ReadNext extends Component {\r\n  render() {\r\n    const { next, prev } = this.props;\r\n    return (\r\n      <aside className=\"read-next\">\r\n        <ReadNextStory post={next} />\r\n        <ReadNextStory className=\"prev\" post={prev} />\r\n      </aside>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReadNext;\r\n"],"sourceRoot":""}