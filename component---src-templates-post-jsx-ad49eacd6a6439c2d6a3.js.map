{"version":3,"sources":["webpack:///./src/templates/post.jsx","webpack:///./src/components/PostHeader/PostHeader.jsx","webpack:///./src/components/MainHeader/MainHeader.jsx"],"names":["formatReadNext","value","path","fields","slug","title","frontmatter","cover","excerpt","PostTemplate","state","menuOpen","handleOnClick","evt","stopPropagation","_this","closeMenu","openMenu","handleOnClose","setState","render","_this$props","this","props","location","data","_this$props$pageConte","pageContext","next","prev","postNode","markdownRemark","post","result","id","category_id","config","postDefaultCategoryID","parsePost","date","author","tags","className","post_class","authorData","AuthorModel","getAuthor","authors","edges","blogAuthorId","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_26__","_components_Drawer_Drawer__WEBPACK_IMPORTED_MODULE_9__","isOpen","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","siteTitle","_components_SEO_SEO__WEBPACK_IMPORTED_MODULE_3__","postPath","postSEO","_components_Navigation_Navigation__WEBPACK_IMPORTED_MODULE_10__","onClose","_components_SiteWrapper_SiteWrapper__WEBPACK_IMPORTED_MODULE_11__","_components_MainHeader_MainHeader__WEBPACK_IMPORTED_MODULE_5__","_components_MainNav_MainNav__WEBPACK_IMPORTED_MODULE_6__","_components_BlogLogo_BlogLogo__WEBPACK_IMPORTED_MODULE_7__","logo","siteLogo","_components_MenuButton_MenuButton__WEBPACK_IMPORTED_MODULE_8__","navigation","siteNavigation","onClick","_components_MainContent_MainContent__WEBPACK_IMPORTED_MODULE_12__","_components_PostFormatting_PostFormatting__WEBPACK_IMPORTED_MODULE_14__","_components_PostHeader_PostHeader__WEBPACK_IMPORTED_MODULE_13__","_components_PostDate_PostDate__WEBPACK_IMPORTED_MODULE_15__","_components_PostTags_PostTags__WEBPACK_IMPORTED_MODULE_22__","prefix","dangerouslySetInnerHTML","__html","html","_components_PostFooter_PostFooter__WEBPACK_IMPORTED_MODULE_16__","_components_AuthorImage_AuthorImage__WEBPACK_IMPORTED_MODULE_17__","_components_AuthorInfo_AuthorInfo__WEBPACK_IMPORTED_MODULE_18__","_components_PostShare_PostShare__WEBPACK_IMPORTED_MODULE_19__","pathname","_components_GhostSubscribe_GhostSubscribe__WEBPACK_IMPORTED_MODULE_20__","_components_Disqus_Disqus__WEBPACK_IMPORTED_MODULE_25__","_components_ReadNext_ReadNext__WEBPACK_IMPORTED_MODULE_21__","_components_Footer_Footer__WEBPACK_IMPORTED_MODULE_23__","copyright","promoteGatsby","React","Component","pageQuery","PostHeader","children","MainHeader","classes","classNames","no-cover","style","backgroundImage"],"mappings":"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","file":"component---src-templates-post-jsx-ad49eacd6a6439c2d6a3.js","sourcesContent":["import { graphql } from \"gatsby\";\r\nimport React from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport SEO from \"../components/SEO/SEO\";\r\nimport config from \"../../data/SiteConfig\";\r\nimport MainHeader from \"../components/MainHeader/MainHeader\";\r\nimport MainNav from \"../components/MainNav/MainNav\";\r\nimport BlogLogo from \"../components/BlogLogo/BlogLogo\";\r\nimport MenuButton from \"../components/MenuButton/MenuButton\";\r\nimport Drawer from \"../components/Drawer/Drawer\";\r\nimport Navigation from \"../components/Navigation/Navigation\";\r\nimport SiteWrapper from \"../components/SiteWrapper/SiteWrapper\";\r\nimport MainContent from \"../components/MainContent/MainContent\";\r\nimport PostHeader from \"../components/PostHeader/PostHeader\";\r\nimport PostFormatting from \"../components/PostFormatting/PostFormatting\";\r\nimport PostDate from \"../components/PostDate/PostDate\";\r\nimport PostFooter from \"../components/PostFooter/PostFooter\";\r\nimport AuthorImage from \"../components/AuthorImage/AuthorImage\";\r\nimport AuthorInfo from \"../components/AuthorInfo/AuthorInfo\";\r\nimport PostShare from \"../components/PostShare/PostShare\";\r\nimport GhostSubscribe from \"../components/GhostSubscribe/GhostSubscribe\";\r\nimport ReadNext from \"../components/ReadNext/ReadNext\";\r\nimport PostTags from \"../components/PostTags/PostTags\";\r\nimport Footer from \"../components/Footer/Footer\";\r\nimport AuthorModel from \"../models/author-model\";\r\nimport Disqus from \"../components/Disqus/Disqus\";\r\nimport Layout from \"../components/layout\";\r\n\r\nfunction parsePost(post, slug) {\r\n  const result = post;\r\n  if (!result.id) {\r\n    result.id = slug;\r\n  }\r\n  if (!result.id) {\r\n    result.category_id = config.postDefaultCategoryID;\r\n  }\r\n  return result;\r\n}\r\n\r\nconst formatReadNext = value => ({\r\n  path: value.fields.slug,\r\n  title: value.frontmatter.title,\r\n  cover: value.frontmatter.cover,\r\n  excerpt: value.excerpt\r\n});\r\n\r\nclass PostTemplate extends React.Component {\r\n  state = {\r\n    menuOpen: false\r\n  };\r\n\r\n  handleOnClick = evt => {\r\n      evt.stopPropagation();\r\n      if (this.state.menuOpen) {\r\n        this.closeMenu();\r\n      } else {\r\n        this.openMenu();\r\n    }\r\n  };\r\n\r\n  handleOnClose = evt => {\r\n    evt.stopPropagation();\r\n    this.closeMenu();\r\n  };\r\n\r\n  openMenu = () => {\r\n    this.setState({ menuOpen: true });\r\n  };\r\n\r\n  closeMenu = () => {\r\n    this.setState({ menuOpen: false });\r\n  };\r\n\r\n  render() {\r\n    const { location, data } = this.props;\r\n    const { slug, next, prev } = this.props.pageContext;\r\n    const postNode = this.props.data.markdownRemark;\r\n    const post = parsePost(postNode.frontmatter, slug);\r\n    const { cover, title, date, author, tags } = post;\r\n    const className = post.post_class ? post.post_class : \"post\";\r\n    const authorData = AuthorModel.getAuthor(\r\n      this.props.data.authors.edges,\r\n      author,\r\n      config.blogAuthorId\r\n    );\r\n    const getNextData = () => (next ? formatReadNext(data.next) : null);\r\n    const getPrevData = () => (prev ? formatReadNext(data.prev) : null);\r\n\r\n    return (\r\n      <Layout location={this.props.location}>\r\n        <Drawer className=\"post-template\" isOpen={this.state.menuOpen}>\r\n          <Helmet>\r\n            <title>{`${post.title} | ${config.siteTitle}`}</title>\r\n          </Helmet>\r\n          <SEO postPath={slug} postNode={postNode} postSEO />\r\n\r\n          {/* The blog navigation links */}\r\n          <Navigation config={config} onClose={this.handleOnClose} />\r\n\r\n          <SiteWrapper>\r\n            <MainHeader className=\"post-head\" cover={cover}>\r\n              <MainNav>\r\n                <BlogLogo logo={config.siteLogo} title={config.siteTitle} />\r\n                <MenuButton\r\n                  navigation={config.siteNavigation}\r\n                  onClick={this.handleOnClick}\r\n                />\r\n              </MainNav>\r\n            </MainHeader>\r\n            <MainContent>\r\n              <PostFormatting className={className}>\r\n                <PostHeader>\r\n                  <h1 className=\"post-title\">{title}</h1>\r\n                  <section className=\"post-meta\">\r\n                    <PostDate date={date} />\r\n                    <PostTags prefix=\" on \" tags={tags} />\r\n                  </section>\r\n                </PostHeader>\r\n\r\n                <section\r\n                  className=\"post-content\"\r\n                  dangerouslySetInnerHTML={{ __html: postNode.html }}\r\n                />\r\n\r\n                <PostFooter>\r\n                  <AuthorImage author={authorData} />\r\n                  <AuthorInfo prefix=\"/author\" author={authorData} />\r\n                  <PostShare\r\n                    postNode={postNode}\r\n                    postPath={location.pathname}\r\n                    config={config}\r\n                  />\r\n                  <GhostSubscribe />\r\n                  <Disqus postNode={postNode} />\r\n                </PostFooter>\r\n              </PostFormatting>\r\n            </MainContent>\r\n            <ReadNext next={getNextData()} prev={getPrevData()} />\r\n\r\n            {/* The tiny footer at the very bottom */}\r\n            <Footer\r\n              copyright={config.copyright}\r\n              promoteGatsby={config.promoteGatsby}\r\n            />\r\n          </SiteWrapper>\r\n        </Drawer>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\n/* eslint no-undef: \"off\" */\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug($slug: String!, $next: String, $prev: String) {\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      html\r\n      timeToRead\r\n      excerpt\r\n      frontmatter {\r\n        title\r\n        cover\r\n        date\r\n        category\r\n        tags\r\n        author\r\n      }\r\n      fields {\r\n        slug\r\n      }\r\n    }\r\n    # prev post data\r\n    prev: markdownRemark(fields: { slug: { eq: $prev } }) {\r\n      excerpt(pruneLength: 112)\r\n      frontmatter {\r\n        title\r\n        cover\r\n        date\r\n      }\r\n      fields {\r\n        slug\r\n      }\r\n    }\r\n    # next post data\r\n    next: markdownRemark(fields: { slug: { eq: $next } }) {\r\n      excerpt(pruneLength: 112)\r\n      frontmatter {\r\n        title\r\n        cover\r\n        date\r\n      }\r\n      fields {\r\n        slug\r\n      }\r\n    }\r\n    # authors\r\n    authors: allAuthorsJson {\r\n      edges {\r\n        node {\r\n          uid\r\n          name\r\n          image\r\n          url\r\n          bio\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default PostTemplate;\r\n","import React from \"react\";\r\nimport \"./PostHeader.css\";\r\n\r\nclass PostHeader extends React.Component {\r\n  render() {\r\n    const { children } = this.props;\r\n    return <header className=\"post-header\">{children}</header>;\r\n  }\r\n}\r\n\r\nexport default PostHeader;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport \"./MainHeader.css\";\r\n\r\nclass MainHeader extends React.Component {\r\n  render() {\r\n    const { children, cover } = this.props;\r\n\r\n    const classes = classNames(\"main-header\", this.props.className, {\r\n      \"no-cover\": !cover\r\n    });\r\n\r\n    const getStyle = () => {\r\n      if (cover) {\r\n        return { backgroundImage: `url(\"${cover}\")` };\r\n      }\r\n      return null;\r\n    };\r\n\r\n    return (\r\n      <header className={classes} style={getStyle()}>\r\n        {children}\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainHeader;\r\n"],"sourceRoot":""}