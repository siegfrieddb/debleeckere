{"version":3,"sources":["webpack:///./src/components/AuthorProfile/AuthorProfile.jsx","webpack:///./src/components/AuthorName/AuthorName.jsx","webpack:///./src/components/AuthorBio/AuthorBio.jsx","webpack:///./src/components/AuthorStats/AuthorStats.jsx","webpack:///./src/templates/author.jsx","webpack:///./src/components/AuthorThumbnail/AuthorThumbnail.jsx","webpack:///./src/components/PostListing/PostListing.jsx","webpack:///./src/components/SocialMediaIcons/SocialMediaIcons.jsx","webpack:///./src/components/MainHeader/MainHeader.jsx"],"names":["AuthorProfile","render","_this$props","this","props","children","className","classes","classNames","react_default","a","createElement","React","Component","AuthorName","name","AuthorBio","bio","AuthorStats","postEdges","length","AuthorTemplate","state","menuOpen","handleOnClick","evt","stopPropagation","_this","closeMenu","openMenu","handleOnClose","setState","_this$props$pageConte","pageContext","author","cover","data","allMarkdownRemark","edges","authorsEdges","allAuthorsJson","getAuthor","node","layout","location","Drawer","isOpen","Helmet_default","title","config","siteTitle","Navigation","onClose","SiteWrapper","MainHeader","MainNav","BlogLogo","logo","siteLogo","MenuButton","navigation","siteNavigation","onClick","components_AuthorProfile_AuthorProfile","AuthorImage","components_AuthorName_AuthorName","components_AuthorBio_AuthorBio","AuthorMeta","AuthorLocation","AuthorWebsite","url","components_AuthorStats_AuthorStats","PostListing","postAuthors","SocialMediaIcons","urls","socialUrls","Footer","copyright","promoteGatsby","pageQuery","AuthorThumbnail","avatar","src","alt","data-pin-nopin","authorEdges","postList","map","postEdge","path","fields","slug","tags","frontmatter","date","AuthorModel","SiteConfig","blogAuthorId","excerpt","timeToRead","post","post_class","PostFormatting","key","PostHeader","gatsby_browser_entry","to","components_AuthorThumbnail_AuthorThumbnail","image","AuthorLink","uid","PostTags","prefix","PostDate","color","react__WEBPACK_IMPORTED_MODULE_1___default","react_social_icons__WEBPACK_IMPORTED_MODULE_2__","style","height","width","no-cover","backgroundImage"],"mappings":"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","file":"component---src-templates-author-jsx-1fd5692601290b419bbd.js","sourcesContent":["import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport \"./AuthorProfile.css\";\r\n\r\nclass AuthorProfile extends React.Component {\r\n  render() {\r\n    const { children, className } = this.props;\r\n    const classes = classNames(\"author-profile\", className);\r\n\r\n    return <section className={classes}>{children}</section>;\r\n  }\r\n}\r\n\r\nexport default AuthorProfile;\r\n","import React from \"react\";\r\nimport \"./AuthorName.css\";\r\n\r\nclass AuthorName extends React.Component {\r\n  render() {\r\n    const { name } = this.props;\r\n    if (name) {\r\n      return <h1 className=\"author-title\">{name}</h1>;\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default AuthorName;\r\n","import React from \"react\";\r\nimport \"./AuthorBio.css\";\r\n\r\nclass AuthorBio extends React.Component {\r\n  render() {\r\n    const { bio } = this.props;\r\n    if (bio) {\r\n      return <h2 className=\"author-bio\">{bio}</h2>;\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default AuthorBio;\r\n","import React from \"react\";\r\n\r\nclass AuthorStats extends React.Component {\r\n  render() {\r\n    const { postEdges } = this.props;\r\n    const getPostText = () => {\r\n      if (postEdges) {\r\n        return postEdges.length > 1\r\n          ? `${postEdges.length} posts`\r\n          : `${postEdges.length} post`;\r\n      }\r\n      return \"No posts\";\r\n    };\r\n    return (\r\n      <span className=\"author-stats\">\r\n        <i className=\"icon-stats\" /> {getPostText()}\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AuthorStats;\r\n","import { graphql } from \"gatsby\";\r\nimport React from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport PostListing from \"../components/PostListing/PostListing\";\r\nimport config from \"../../data/SiteConfig\";\r\nimport Drawer from \"../components/Drawer/Drawer\";\r\nimport Navigation from \"../components/Navigation/Navigation\";\r\nimport SiteWrapper from \"../components/SiteWrapper/SiteWrapper\";\r\nimport MainHeader from \"../components/MainHeader/MainHeader\";\r\nimport MainNav from \"../components/MainNav/MainNav\";\r\nimport BlogLogo from \"../components/BlogLogo/BlogLogo\";\r\nimport MenuButton from \"../components/MenuButton/MenuButton\";\r\nimport AuthorImage from \"../components/AuthorImage/AuthorImage\";\r\nimport AuthorProfile from \"../components/AuthorProfile/AuthorProfile\";\r\nimport AuthorName from \"../components/AuthorName/AuthorName\";\r\nimport AuthorBio from \"../components/AuthorBio/AuthorBio\";\r\nimport AuthorMeta from \"../components/AuthorMeta/AuthorMeta\";\r\nimport AuthorLocation from \"../components/AuthorLocation/AuthorLocation\";\r\nimport AuthorWebsite from \"../components/AuthorWebsite/AuthorWebsite\";\r\nimport AuthorStats from \"../components/AuthorStats/AuthorStats\";\r\nimport Footer from \"../components/Footer/Footer\";\r\nimport SocialMediaIcons from \"../components/SocialMediaIcons/SocialMediaIcons\";\r\nimport Layout from \"../components/layout\";\r\n\r\nclass AuthorTemplate extends React.Component {\r\n  state = {\r\n    menuOpen: false\r\n  };\r\n\r\n  handleOnClick = evt => {\r\n    evt.stopPropagation();\r\n    if (this.state.menuOpen) {\r\n      this.closeMenu();\r\n    } else {\r\n      this.openMenu();\r\n    }\r\n  };\r\n\r\n  handleOnClose = evt => {\r\n    evt.stopPropagation();\r\n    this.closeMenu();\r\n  };\r\n\r\n  openMenu = () => {\r\n    this.setState({ menuOpen: true });\r\n  };\r\n\r\n  closeMenu = () => {\r\n    this.setState({ menuOpen: false });\r\n  };\r\n\r\n  render() {\r\n    const { author, cover } = this.props.pageContext;\r\n    const postEdges =\r\n      this.props.data.allMarkdownRemark &&\r\n      this.props.data.allMarkdownRemark.edges\r\n        ? this.props.data.allMarkdownRemark.edges\r\n        : [];\r\n    const authorsEdges =\r\n      this.props.data.allAuthorsJson && this.props.data.allAuthorsJson.edges\r\n        ? this.props.data.allAuthorsJson.edges\r\n        : [];\r\n    const getAuthor = () => authorsEdges[0].node;\r\n\r\n    return (\r\n      <Layout location={this.props.location}>\r\n        <Drawer className=\"author-template\" isOpen={this.state.menuOpen}>\r\n          <Helmet title={`Posts by \"${author}\" | ${config.siteTitle}`} />\r\n\r\n          {/* The blog navigation links */}\r\n          <Navigation config={config} onClose={this.handleOnClose} />\r\n\r\n          <SiteWrapper>\r\n            <MainHeader className=\"author-head\" cover={cover}>\r\n              <MainNav>\r\n                <BlogLogo logo={config.siteLogo} title={config.siteTitle} />\r\n                <MenuButton\r\n                  navigation={config.siteNavigation}\r\n                  onClick={this.handleOnClick}\r\n                />\r\n              </MainNav>\r\n            </MainHeader>\r\n\r\n            <AuthorProfile className=\"inner\">\r\n              <AuthorImage author={getAuthor()} />\r\n              <AuthorName name={getAuthor().name} />\r\n              <AuthorBio bio={getAuthor().bio} />\r\n              <AuthorMeta>\r\n                <AuthorLocation location={getAuthor().location} />\r\n                <AuthorWebsite url={getAuthor().url} />\r\n              </AuthorMeta>\r\n              <AuthorStats postEdges={postEdges} />\r\n            </AuthorProfile>\r\n\r\n            {/* PostListing component renders all the posts */}\r\n            <PostListing postEdges={postEdges} postAuthors={authorsEdges} />\r\n\r\n            {/* Social information here */}\r\n            <SocialMediaIcons urls={getAuthor().socialUrls} />\r\n\r\n            {/* The tiny footer at the very bottom */}\r\n            <Footer\r\n              copyright={config.copyright}\r\n              promoteGatsby={config.promoteGatsby}\r\n            />\r\n          </SiteWrapper>\r\n        </Drawer>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\n/* eslint no-undef: \"off\" */\r\nexport const pageQuery = graphql`\r\n  query AuthorPage($author: String) {\r\n    allMarkdownRemark(\r\n      limit: 1000\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { author: { eq: $author } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n          }\r\n          excerpt\r\n          timeToRead\r\n          frontmatter {\r\n            title\r\n            tags\r\n            cover\r\n            date\r\n            author\r\n          }\r\n        }\r\n      }\r\n    }\r\n    allAuthorsJson(filter: { uid: { eq: $author } }) {\r\n      edges {\r\n        node {\r\n          uid\r\n          name\r\n          image\r\n          url\r\n          bio\r\n          location\r\n          socialUrls\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AuthorTemplate;\r\n","import React from \"react\";\r\nimport \"./AuthorThumbnail.css\";\r\n\r\nclass AuthorThumbnail extends React.Component {\r\n  render() {\r\n    const { avatar, name } = this.props;\r\n    if (avatar && name) {\r\n      return (\r\n        <img\r\n          className=\"author-thumb\"\r\n          src={avatar}\r\n          alt={name}\r\n          data-pin-nopin=\"true\"\r\n        />\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default AuthorThumbnail;\r\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport AuthorThumbnail from \"../AuthorThumbnail/AuthorThumbnail\";\r\nimport PostTags from \"../PostTags/PostTags\";\r\nimport SiteConfig from \"../../../data/SiteConfig\";\r\nimport AuthorLink from \"../AuthorLink/AuthorLink\";\r\nimport PostFormatting from \"../../components/PostFormatting/PostFormatting\";\r\nimport PostHeader from \"../../components/PostHeader/PostHeader\";\r\nimport PostDate from \"../PostDate/PostDate\";\r\nimport AuthorModel from \"../../models/author-model\";\r\nimport \"./PostListing.css\";\r\n\r\nconst getPostList = (postEdges, authorEdges) =>\r\n  postEdges.map(postEdge => ({\r\n    path: postEdge.node.fields.slug,\r\n    tags: postEdge.node.frontmatter.tags,\r\n    cover: postEdge.node.frontmatter.cover,\r\n    title: postEdge.node.frontmatter.title,\r\n    date: postEdge.node.frontmatter.date,\r\n    author: AuthorModel.getAuthor(\r\n      authorEdges,\r\n      postEdge.node.frontmatter.author,\r\n      SiteConfig.blogAuthorId\r\n    ),\r\n    excerpt: postEdge.node.excerpt,\r\n    timeToRead: postEdge.node.timeToRead\r\n  }));\r\n\r\nclass PostListing extends React.Component {\r\n  render() {\r\n    const postList = getPostList(this.props.postEdges, this.props.postAuthors);\r\n\r\n    return (\r\n      <div>\r\n        {/* This is the post loop - each post will be output using this markup */}\r\n        {postList.map(post => {\r\n          const { title, path, excerpt, author, tags, date } = post;\r\n          const className = post.post_class ? post.post_class : \"post\";\r\n\r\n          return (\r\n            <PostFormatting className={className} key={title}>\r\n              <PostHeader>\r\n                <h2 className=\"post-title\">\r\n                  <Link to={path}>{title}</Link>\r\n                </h2>\r\n              </PostHeader>\r\n              <section className=\"post-excerpt\">\r\n                {/* TODO limit excerpt to 26 words */}\r\n                <p>\r\n                  {excerpt}{\" \"}\r\n                  <Link className=\"read-more\" to={path}>\r\n                    &raquo;\r\n                  </Link>\r\n                </p>\r\n              </section>\r\n              <footer className=\"post-meta\">\r\n                <AuthorThumbnail avatar={author.image} name={author.name} />\r\n                <AuthorLink url={`/author/${author.uid}`} name={author.name} />\r\n                <PostTags prefix=\" on \" tags={tags} />\r\n                <PostDate date={date} />\r\n              </footer>\r\n            </PostFormatting>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostListing;\r\n","import React from \"react\";\r\nimport { SocialIcon } from \"react-social-icons\";\r\nimport \"./SocialMediaIcons.css\";\r\n\r\nclass SocialMediaIcons extends React.Component {\r\n  render() {\r\n    const { urls, color } = this.props;\r\n    if (urls && urls.length > 0) {\r\n      return (\r\n        <div className=\"social-media-icons\">\r\n          {urls.map(url => (\r\n            <SocialIcon\r\n              key={url}\r\n              className=\"social-media-icon\"\r\n              url={url}\r\n              color={color}\r\n              style={{ height: null, width: null }}\r\n            />\r\n          ))}\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default SocialMediaIcons;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport \"./MainHeader.css\";\r\n\r\nclass MainHeader extends React.Component {\r\n  render() {\r\n    const { children, cover } = this.props;\r\n\r\n    const classes = classNames(\"main-header\", this.props.className, {\r\n      \"no-cover\": !cover\r\n    });\r\n\r\n    const getStyle = () => {\r\n      if (cover) {\r\n        return { backgroundImage: `url(\"${cover}\")` };\r\n      }\r\n      return null;\r\n    };\r\n\r\n    return (\r\n      <header className={classes} style={getStyle()}>\r\n        {children}\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainHeader;\r\n"],"sourceRoot":""}