{"version":3,"sources":["webpack:///./src/templates/category.jsx","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./src/components/PostTags/PostTags.jsx","webpack:///./src/components/AuthorLink/AuthorLink.jsx","webpack:///./src/components/AuthorThumbnail/AuthorThumbnail.jsx","webpack:///./src/components/PostListing/PostListing.jsx"],"names":["CategoryTemplate","render","category","this","props","pageContext","postEdges","data","allMarkdownRemark","edges","authorsEdges","authors","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_5__","location","className","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","title","config","siteTitle","_components_PostListing_PostListing__WEBPACK_IMPORTED_MODULE_3__","postAuthors","React","Component","pageQuery","dP","__webpack_require__","f","FProto","Function","prototype","nameRE","configurable","get","match","e","PostTags","_this$props","prefix","tags","map","tag","index","arr","key","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","_","kebabCase","length","AuthorLink","name","url","react__WEBPACK_IMPORTED_MODULE_2___default","AuthorThumbnail","avatar","react_default","src","alt","data-pin-nopin","PostListing","authorEdges","postList","postEdge","path","node","fields","slug","frontmatter","cover","date","author","AuthorModel","getAuthor","SiteConfig","blogAuthorId","excerpt","timeToRead","post","post_class","PostFormatting","PostHeader","gatsby_browser_entry","components_AuthorThumbnail_AuthorThumbnail","image","uid","PostDate"],"mappings":"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","file":"component---src-templates-category-jsx-b7c8edcb7b1853d3bb23.js","sourcesContent":["import { graphql } from \"gatsby\";\r\nimport React from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport PostListing from \"../components/PostListing/PostListing\";\r\nimport config from \"../../data/SiteConfig\";\r\nimport Layout from \"../components/layout\";\r\n\r\nclass CategoryTemplate extends React.Component {\r\n  render() {\r\n    const category = this.props.pageContext.category;\r\n    const postEdges = this.props.data.allMarkdownRemark.edges;\r\n    const authorsEdges = this.props.data.authors.edges;\r\n    return (\r\n      <Layout location={this.props.location}>\r\n        <div className=\"category-container\">\r\n          <Helmet\r\n            title={`Posts in category \"${category}\" | ${config.siteTitle}`}\r\n          />\r\n          <PostListing postEdges={postEdges} postAuthors={authorsEdges} />\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\n/* eslint no-undef: \"off\" */\r\nexport const pageQuery = graphql`\r\n  query CategoryPage($category: String) {\r\n    allMarkdownRemark(\r\n      limit: 1000\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { category: { eq: $category } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n          }\r\n          excerpt\r\n          timeToRead\r\n          frontmatter {\r\n            title\r\n            tags\r\n            cover\r\n            date\r\n          }\r\n        }\r\n      }\r\n    }\r\n    # authors\r\n    authors: allAuthorsJson {\r\n      edges {\r\n        node {\r\n          uid\r\n          name\r\n          image\r\n          url\r\n          bio\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default CategoryTemplate;\r\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\nimport { Link } from \"gatsby\";\r\nimport \"./PostTags.css\";\r\n\r\nclass PostTags extends Component {\r\n  render() {\r\n    const { prefix, tags } = this.props;\r\n    if (tags) {\r\n      return (\r\n        <span>\r\n          {prefix}\r\n          {tags.map((tag, index, arr) => (\r\n            <span key={tag}>\r\n              <Link key={tag} to={`/tags/${_.kebabCase(tag)}`}>\r\n                {tag}\r\n              </Link>\r\n              {index !== arr.length - 1 ? \", \" : \"\"}\r\n            </span>\r\n          ))}\r\n        </span>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default PostTags;\r\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport \"./AuthorLink.css\";\r\n\r\nclass AuthorLink extends React.Component {\r\n  render() {\r\n    const { name, url } = this.props;\r\n    if (name && url) {\r\n      return <Link to={url}>{name}</Link>;\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default AuthorLink;\r\n","import React from \"react\";\r\nimport \"./AuthorThumbnail.css\";\r\n\r\nclass AuthorThumbnail extends React.Component {\r\n  render() {\r\n    const { avatar, name } = this.props;\r\n    if (avatar && name) {\r\n      return (\r\n        <img\r\n          className=\"author-thumb\"\r\n          src={avatar}\r\n          alt={name}\r\n          data-pin-nopin=\"true\"\r\n        />\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default AuthorThumbnail;\r\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport AuthorThumbnail from \"../AuthorThumbnail/AuthorThumbnail\";\r\nimport PostTags from \"../PostTags/PostTags\";\r\nimport SiteConfig from \"../../../data/SiteConfig\";\r\nimport AuthorLink from \"../AuthorLink/AuthorLink\";\r\nimport PostFormatting from \"../../components/PostFormatting/PostFormatting\";\r\nimport PostHeader from \"../../components/PostHeader/PostHeader\";\r\nimport PostDate from \"../PostDate/PostDate\";\r\nimport AuthorModel from \"../../models/author-model\";\r\nimport \"./PostListing.css\";\r\n\r\nconst getPostList = (postEdges, authorEdges) =>\r\n  postEdges.map(postEdge => ({\r\n    path: postEdge.node.fields.slug,\r\n    tags: postEdge.node.frontmatter.tags,\r\n    cover: postEdge.node.frontmatter.cover,\r\n    title: postEdge.node.frontmatter.title,\r\n    date: postEdge.node.frontmatter.date,\r\n    author: AuthorModel.getAuthor(\r\n      authorEdges,\r\n      postEdge.node.frontmatter.author,\r\n      SiteConfig.blogAuthorId\r\n    ),\r\n    excerpt: postEdge.node.excerpt,\r\n    timeToRead: postEdge.node.timeToRead\r\n  }));\r\n\r\nclass PostListing extends React.Component {\r\n  render() {\r\n    const postList = getPostList(this.props.postEdges, this.props.postAuthors);\r\n\r\n    return (\r\n      <div>\r\n        {/* This is the post loop - each post will be output using this markup */}\r\n        {postList.map(post => {\r\n          const { title, path, excerpt, author, tags, date } = post;\r\n          const className = post.post_class ? post.post_class : \"post\";\r\n\r\n          return (\r\n            <PostFormatting className={className} key={title}>\r\n              <PostHeader>\r\n                <h2 className=\"post-title\">\r\n                  <Link to={path}>{title}</Link>\r\n                </h2>\r\n              </PostHeader>\r\n              <section className=\"post-excerpt\">\r\n                {/* TODO limit excerpt to 26 words */}\r\n                <p>\r\n                  {excerpt}{\" \"}\r\n                  <Link className=\"read-more\" to={path}>\r\n                    &raquo;\r\n                  </Link>\r\n                </p>\r\n              </section>\r\n              <footer className=\"post-meta\">\r\n                <AuthorThumbnail avatar={author.image} name={author.name} />\r\n                <AuthorLink url={`/author/${author.uid}`} name={author.name} />\r\n                <PostTags prefix=\" on \" tags={tags} />\r\n                <PostDate date={date} />\r\n              </footer>\r\n            </PostFormatting>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostListing;\r\n"],"sourceRoot":""}