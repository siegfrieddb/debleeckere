{"version":3,"sources":["webpack:///./src/templates/post.jsx","webpack:///./src/components/Drawer/Drawer.jsx","webpack:///./src/components/SiteWrapper/SiteWrapper.jsx","webpack:///./src/components/Footer/Footer.jsx","webpack:///./src/components/MainNav/MainNav.jsx","webpack:///./src/components/BlogLogo/BlogLogo.jsx","webpack:///./src/components/MenuButton/MenuButton.jsx","webpack:///./src/components/Navigation/GetNavList.jsx","webpack:///./src/components/Navigation/Navigation.jsx","webpack:///./src/components/SubscribeButton/SubscribeButton.jsx","webpack:///./src/components/MainContent/MainContent.jsx","webpack:///./src/components/SEO/SEO.jsx","webpack:///./src/components/MainHeader/MainHeader.jsx","webpack:///./src/components/AuthorImage/AuthorImage.jsx","webpack:///./src/components/AuthorMeta/AuthorMeta.jsx","webpack:///./src/components/AuthorLocation/AuthorLocation.jsx","webpack:///./src/components/AuthorWebsite/AuthorWebsite.jsx","webpack:///./src/components/PostFooter/PostFooter.jsx","webpack:///./src/components/AuthorInfo/AuthorInfo.jsx","webpack:///./src/components/PostShare/PostShare.jsx","webpack:///./src/components/GhostSubscribe/GhostSubscribe.jsx","webpack:///./src/components/ReadNext/ReadNext.jsx","webpack:///./src/components/Disqus/Disqus.jsx"],"names":["formatReadNext","value","path","fields","slug","title","frontmatter","cover","excerpt","PostTemplate","state","menuOpen","handleOnClick","evt","stopPropagation","_this","closeMenu","openMenu","handleOnClose","setState","render","_this$props","this","props","location","data","_this$props$pageConte","pageContext","next","prev","postNode","markdownRemark","post","result","id","category_id","config","postDefaultCategoryID","parsePost","date","author","tags","className","post_class","authorData","AuthorModel","getAuthor","authors","edges","blogAuthorId","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_26__","_components_Drawer_Drawer__WEBPACK_IMPORTED_MODULE_9__","isOpen","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","siteTitle","_components_SEO_SEO__WEBPACK_IMPORTED_MODULE_3__","postPath","postSEO","_components_Navigation_Navigation__WEBPACK_IMPORTED_MODULE_10__","onClose","_components_SiteWrapper_SiteWrapper__WEBPACK_IMPORTED_MODULE_11__","_components_MainHeader_MainHeader__WEBPACK_IMPORTED_MODULE_5__","_components_MainNav_MainNav__WEBPACK_IMPORTED_MODULE_6__","_components_BlogLogo_BlogLogo__WEBPACK_IMPORTED_MODULE_7__","logo","siteLogo","_components_MenuButton_MenuButton__WEBPACK_IMPORTED_MODULE_8__","navigation","siteNavigation","onClick","_components_MainContent_MainContent__WEBPACK_IMPORTED_MODULE_12__","_components_PostFormatting_PostFormatting__WEBPACK_IMPORTED_MODULE_14__","_components_PostHeader_PostHeader__WEBPACK_IMPORTED_MODULE_13__","_components_PostDate_PostDate__WEBPACK_IMPORTED_MODULE_15__","_components_PostTags_PostTags__WEBPACK_IMPORTED_MODULE_22__","prefix","dangerouslySetInnerHTML","__html","html","_components_PostFooter_PostFooter__WEBPACK_IMPORTED_MODULE_16__","_components_AuthorImage_AuthorImage__WEBPACK_IMPORTED_MODULE_17__","_components_AuthorInfo_AuthorInfo__WEBPACK_IMPORTED_MODULE_18__","_components_PostShare_PostShare__WEBPACK_IMPORTED_MODULE_19__","pathname","_components_GhostSubscribe_GhostSubscribe__WEBPACK_IMPORTED_MODULE_20__","_components_Disqus_Disqus__WEBPACK_IMPORTED_MODULE_25__","_components_ReadNext_ReadNext__WEBPACK_IMPORTED_MODULE_21__","_components_Footer_Footer__WEBPACK_IMPORTED_MODULE_23__","copyright","promoteGatsby","React","Component","pageQuery","Drawer","children","classes","classNames","SiteWrapper","Footer","_this$props$copyright","label","url","year","href","Date","getFullYear","show","MainNav","BlogLogo","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","src","alt","MenuButton","GetNavList","NavList","primaryText","component","Link","divider","userLinks","forEach","link","push","Divider","Subheader","react_default","ListItem","remainingProps","objectWithoutPropertiesLoose_default","role","mapToListParts","item","index","key","isValidElement","subheader","nestedItems","Object","assign","map","Navigation","navItems","MainContent","SEO","description","image","postURL","postMeta","siteUrl","pathPrefix","siteDescription","realPrefix","blogURL","schemaOrgJSONLD","@context","@type","name","alternateName","siteTitleAlt","itemListElement","position","@id","headline","content","type","JSON","stringify","property","siteFBAppID","userTwitter","MainHeader","no-cover","style","backgroundImage","AuthorImage","_this$props$author","react__WEBPACK_IMPORTED_MODULE_2___default","AuthorMeta","AuthorLocation","AuthorWebsite","PostFooter","Bio","bio","morePostsUrl","gatsby__WEBPACK_IMPORTED_MODULE_3__","AuthorInfo","uid","authorInfoUrl","_AuthorLink_AuthorLink__WEBPACK_IMPORTED_MODULE_8__","_components_AuthorMeta_AuthorMeta__WEBPACK_IMPORTED_MODULE_5__","_AuthorLocation_AuthorLocation__WEBPACK_IMPORTED_MODULE_6__","_AuthorWebsite_AuthorWebsite__WEBPACK_IMPORTED_MODULE_7__","PostShare","FacebookShareButton","ShareButtons","GooglePlusShareButton","TwitterShareButton","display","fontSize","quote","GhostSubscribe","subscribers","blog","ReadNextStory","styles","ReadNext","Disqus","_Component","call","toasts","notifyAboutComment","bind","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_1___default","onSnackbarDismiss","slice","text","disqusShortname","react_disqus_comments__WEBPACK_IMPORTED_MODULE_3___default","shortname","identifier","onNewComment"],"mappings":"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","file":"component---src-templates-post-jsx-df586987a2584bb869fb.js","sourcesContent":["import { graphql } from \"gatsby\";\r\nimport React from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport SEO from \"../components/SEO/SEO\";\r\nimport config from \"../../data/SiteConfig\";\r\nimport MainHeader from \"../components/MainHeader/MainHeader\";\r\nimport MainNav from \"../components/MainNav/MainNav\";\r\nimport BlogLogo from \"../components/BlogLogo/BlogLogo\";\r\nimport MenuButton from \"../components/MenuButton/MenuButton\";\r\nimport Drawer from \"../components/Drawer/Drawer\";\r\nimport Navigation from \"../components/Navigation/Navigation\";\r\nimport SiteWrapper from \"../components/SiteWrapper/SiteWrapper\";\r\nimport MainContent from \"../components/MainContent/MainContent\";\r\nimport PostHeader from \"../components/PostHeader/PostHeader\";\r\nimport PostFormatting from \"../components/PostFormatting/PostFormatting\";\r\nimport PostDate from \"../components/PostDate/PostDate\";\r\nimport PostFooter from \"../components/PostFooter/PostFooter\";\r\nimport AuthorImage from \"../components/AuthorImage/AuthorImage\";\r\nimport AuthorInfo from \"../components/AuthorInfo/AuthorInfo\";\r\nimport PostShare from \"../components/PostShare/PostShare\";\r\nimport GhostSubscribe from \"../components/GhostSubscribe/GhostSubscribe\";\r\nimport ReadNext from \"../components/ReadNext/ReadNext\";\r\nimport PostTags from \"../components/PostTags/PostTags\";\r\nimport Footer from \"../components/Footer/Footer\";\r\nimport AuthorModel from \"../models/author-model\";\r\nimport Disqus from \"../components/Disqus/Disqus\";\r\nimport Layout from \"../components/layout\";\r\n\r\nfunction parsePost(post, slug) {\r\n  const result = post;\r\n  if (!result.id) {\r\n    result.id = slug;\r\n  }\r\n  if (!result.id) {\r\n    result.category_id = config.postDefaultCategoryID;\r\n  }\r\n  return result;\r\n}\r\n\r\nconst formatReadNext = value => ({\r\n  path: value.fields.slug,\r\n  title: value.frontmatter.title,\r\n  cover: value.frontmatter.cover,\r\n  excerpt: value.excerpt\r\n});\r\n\r\nclass PostTemplate extends React.Component {\r\n  state = {\r\n    menuOpen: false\r\n  };\r\n\r\n  handleOnClick = evt => {\r\n      evt.stopPropagation();\r\n      if (this.state.menuOpen) {\r\n        this.closeMenu();\r\n      } else {\r\n        this.openMenu();\r\n    }\r\n  };\r\n\r\n  handleOnClose = evt => {\r\n    evt.stopPropagation();\r\n    this.closeMenu();\r\n  };\r\n\r\n  openMenu = () => {\r\n    this.setState({ menuOpen: true });\r\n  };\r\n\r\n  closeMenu = () => {\r\n    this.setState({ menuOpen: false });\r\n  };\r\n\r\n  render() {\r\n    const { location, data } = this.props;\r\n    const { slug, next, prev } = this.props.pageContext;\r\n    const postNode = this.props.data.markdownRemark;\r\n    const post = parsePost(postNode.frontmatter, slug);\r\n    const { cover, title, date, author, tags } = post;\r\n    const className = post.post_class ? post.post_class : \"post\";\r\n    const authorData = AuthorModel.getAuthor(\r\n      this.props.data.authors.edges,\r\n      author,\r\n      config.blogAuthorId\r\n    );\r\n    const getNextData = () => (next ? formatReadNext(data.next) : null);\r\n    const getPrevData = () => (prev ? formatReadNext(data.prev) : null);\r\n\r\n    return (\r\n      <Layout location={this.props.location}>\r\n        <Drawer className=\"post-template\" isOpen={this.state.menuOpen}>\r\n          <Helmet>\r\n            <title>{`${post.title} | ${config.siteTitle}`}</title>\r\n          </Helmet>\r\n          <SEO postPath={slug} postNode={postNode} postSEO />\r\n\r\n          {/* The blog navigation links */}\r\n          <Navigation config={config} onClose={this.handleOnClose} />\r\n\r\n          <SiteWrapper>\r\n            <MainHeader className=\"post-head\" cover={cover}>\r\n              <MainNav>\r\n                <BlogLogo logo={config.siteLogo} title={config.siteTitle} />\r\n                <MenuButton\r\n                  navigation={config.siteNavigation}\r\n                  onClick={this.handleOnClick}\r\n                />\r\n              </MainNav>\r\n            </MainHeader>\r\n            <MainContent>\r\n              <PostFormatting className={className}>\r\n                <PostHeader>\r\n                  <h1 className=\"post-title\">{title}</h1>\r\n                  <section className=\"post-meta\">\r\n                    <PostDate date={date} />\r\n                    <PostTags prefix=\" on \" tags={tags} />\r\n                  </section>\r\n                </PostHeader>\r\n\r\n                <section\r\n                  className=\"post-content\"\r\n                  dangerouslySetInnerHTML={{ __html: postNode.html }}\r\n                />\r\n\r\n                <PostFooter>\r\n                  <AuthorImage author={authorData} />\r\n                  <AuthorInfo prefix=\"/author\" author={authorData} />\r\n                  <PostShare\r\n                    postNode={postNode}\r\n                    postPath={location.pathname}\r\n                    config={config}\r\n                  />\r\n                  <GhostSubscribe />\r\n                  <Disqus postNode={postNode} />\r\n                </PostFooter>\r\n              </PostFormatting>\r\n            </MainContent>\r\n            <ReadNext next={getNextData()} prev={getPrevData()} />\r\n\r\n            {/* The tiny footer at the very bottom */}\r\n            <Footer\r\n              copyright={config.copyright}\r\n              promoteGatsby={config.promoteGatsby}\r\n            />\r\n          </SiteWrapper>\r\n        </Drawer>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\n/* eslint no-undef: \"off\" */\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug($slug: String!, $next: String, $prev: String) {\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      html\r\n      timeToRead\r\n      excerpt\r\n      frontmatter {\r\n        title\r\n        cover\r\n        date\r\n        category\r\n        tags\r\n        author\r\n      }\r\n      fields {\r\n        slug\r\n      }\r\n    }\r\n    # prev post data\r\n    prev: markdownRemark(fields: { slug: { eq: $prev } }) {\r\n      excerpt(pruneLength: 112)\r\n      frontmatter {\r\n        title\r\n        cover\r\n        date\r\n      }\r\n      fields {\r\n        slug\r\n      }\r\n    }\r\n    # next post data\r\n    next: markdownRemark(fields: { slug: { eq: $next } }) {\r\n      excerpt(pruneLength: 112)\r\n      frontmatter {\r\n        title\r\n        cover\r\n        date\r\n      }\r\n      fields {\r\n        slug\r\n      }\r\n    }\r\n    # authors\r\n    authors: allAuthorsJson {\r\n      edges {\r\n        node {\r\n          uid\r\n          name\r\n          image\r\n          url\r\n          bio\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default PostTemplate;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport \"./Drawer.css\";\r\n\r\nclass Drawer extends React.Component {\r\n  render() {\r\n    const { children, isOpen, className } = this.props;\r\n\r\n    const getClassName = isOpened => (isOpened ? \"nav-opened\" : \"nav-closed\");\r\n    const classes = classNames(className, getClassName(isOpen));\r\n\r\n    return <div className={classes}>{children}</div>;\r\n  }\r\n}\r\n\r\nexport default Drawer;\r\n","import React from \"react\";\r\nimport \"./SiteWrapper.css\";\r\n\r\nclass SiteWrapper extends React.Component {\r\n  render() {\r\n    const { children } = this.props;\r\n    return <div className=\"site-wrapper\">{children}</div>;\r\n  }\r\n}\r\n\r\nexport default SiteWrapper;\r\n","import React, { Component } from \"react\";\r\nimport \"./Footer.css\";\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    const PoweredBy = props => {\r\n      const { show } = props;\r\n      if (show) {\r\n        return (\r\n          <section className=\"poweredby\">\r\n            Proudly published with <a href=\"https://gatsbyjs.org\">Gatsby</a>\r\n          </section>\r\n        );\r\n      }\r\n      return null;\r\n    };\r\n\r\n    const { promoteGatsby } = this.props;\r\n    const { label, url, year } = this.props.copyright;\r\n    return (\r\n      <footer className=\"site-footer clearfix\">\r\n        <section className=\"copyright\">\r\n          <a href={url || \"/\"}>{label}</a> &copy;{\" \"}\r\n          {year || new Date().getFullYear()}\r\n        </section>\r\n        <PoweredBy show={promoteGatsby} />\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport \"./MainNav.css\";\r\n\r\nclass MainNav extends React.Component {\r\n  render() {\r\n    const { children, className } = this.props;\r\n    const formatting = [\"overlay\", \"clearfix\"];\r\n    const classes = classNames(\"main-nav\", formatting, className);\r\n\r\n    return <nav className={classes}>{children}</nav>;\r\n  }\r\n}\r\n\r\nexport default MainNav;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport \"./BlogLogo.css\";\r\n\r\nclass BlogLogo extends Component {\r\n  render() {\r\n    const { logo, url, title } = this.props;\r\n    if (logo) {\r\n      return (\r\n        <Link className=\"blog-logo\" to={url || \"/\"}>\r\n          {/* style={{ boxShadow: \"none\" }}> */}\r\n          <img src={logo} alt={title} />\r\n        </Link>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default BlogLogo;\r\n","import React, { Component } from \"react\";\r\nimport \"./MenuButton.css\";\r\n\r\nclass MenuButton extends Component {\r\n  render() {\r\n    const { navigation, onClick } = this.props;\r\n    if (navigation && onClick) {\r\n      return (\r\n        <a className=\"menu-button icon-menu\" href=\"#menu\" onClick={onClick}>\r\n          <span className=\"word\">Menu</span>\r\n        </a>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default MenuButton;\r\n","// import FontIcon from \"react-md/lib/FontIcons\";\r\nimport { Link } from \"gatsby\";\r\n\r\nfunction GetNavList(config) {\r\n  const NavList = [\r\n    {\r\n      primaryText: \"Home\",\r\n      // LeftIcon: <p>home</p>,\r\n      component: Link,\r\n      to: \"/\"\r\n    },\r\n    {\r\n      divider: true\r\n    }\r\n  ];\r\n\r\n  if (config.userLinks) {\r\n    config.userLinks.forEach(link => {\r\n      NavList.push({\r\n        primaryText: link.label,\r\n        // LeftIcon: <FontIcon forceSize iconClassName={link.iconClassName} />,\r\n        component: \"a\",\r\n        href: link.url\r\n      });\r\n    });\r\n  }\r\n\r\n  //NavList.push({ divider: true });\r\n\r\n \r\n  return NavList;\r\n}\r\nexport default GetNavList;\r\n","import React, { Component, createElement, isValidElement } from \"react\";\r\nimport GetNavList from \"./GetNavList\";\r\nimport \"./Navigation.css\";\r\nimport SubscribeButton from \"../SubscribeButton/SubscribeButton\";\r\n\r\nconst Divider = () => null;\r\n\r\nconst Subheader = props => {\r\n  const { primaryText } = props;\r\n  return <h3>{primaryText}</h3>;\r\n};\r\n\r\nconst ListItem = props => {\r\n  const { primaryText, component, ...remainingProps } = props;\r\n  return (\r\n    <li className=\"nav-opened\" role=\"presentation\">\r\n      {createElement(component, remainingProps, primaryText)}\r\n    </li>\r\n  );\r\n};\r\n\r\nconst mapToListParts = (item, index) => {\r\n  if (typeof item === \"string\" || typeof item === \"number\") {\r\n    return createElement(ListItem, { key: item, primaryText: item });\r\n  } else if (isValidElement(item)) {\r\n    return item;\r\n  }\r\n\r\n  const { divider, subheader, nestedItems, ...remainingProps } = item;\r\n  let component;\r\n  if (divider) {\r\n    component = Divider;\r\n  } else if (subheader) {\r\n    component = Subheader;\r\n  } else {\r\n    component = ListItem;\r\n  }\r\n\r\n  const props = { ...remainingProps, key: item.key || index };\r\n  if (nestedItems) {\r\n    props.nestedItems = nestedItems.map(mapToListParts);\r\n  }\r\n\r\n  return createElement(component, props);\r\n};\r\n\r\nclass Navigation extends Component {\r\n  render() {\r\n    const { config, onClose } = this.props;\r\n    const navItems = GetNavList(config);\r\n    return (\r\n      <div>\r\n        <div className=\"nav\">\r\n          <h3 className=\"nav-title\">Menu</h3>\r\n          <a href=\"#close\" className=\"nav-close\" onClick={onClose}>\r\n            <span className=\"hidden\">Close</span>\r\n          </a>\r\n          <ul>{navItems.map(mapToListParts)}</ul>\r\n        </div>\r\n        <span className=\"nav-cover\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport \"./SubscribeButton.css\";\r\n\r\nclass SubscribeButton extends React.Component {\r\n  render() {\r\n    const { url } = this.props;\r\n    if (url) {\r\n      return (\r\n        <a className=\"subscribe-button icon-feed\" href={url}>\r\n          Subscribe\r\n        </a>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default SubscribeButton;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport \"./MainContent.css\";\r\n\r\nclass MainContent extends React.Component {\r\n  render() {\r\n    const { children } = this.props;\r\n\r\n    const classes = classNames(\"content\", this.props.className);\r\n\r\n    return (\r\n      <main id=\"content\" className={classes} role=\"main\">\r\n        {children}\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainContent;\r\n","import React, { Component } from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport config from \"../../../data/SiteConfig\";\r\n\r\nclass SEO extends Component {\r\n  render() {\r\n    const { postNode, postPath, postSEO } = this.props;\r\n    let title;\r\n    let description;\r\n    let image;\r\n    let postURL;\r\n    if (postSEO) {\r\n      const postMeta = postNode.frontmatter;\r\n      title = postMeta.title;\r\n      description = postMeta.description\r\n        ? postMeta.description\r\n        : postNode.excerpt;\r\n      image = postMeta.cover;\r\n      postURL = config.siteUrl + config.pathPrefix + postPath;\r\n    } else {\r\n      title = config.siteTitle;\r\n      description = config.siteDescription;\r\n      image = config.siteLogo;\r\n    }\r\n    const realPrefix = config.pathPrefix === \"/\" ? \"\" : config.pathPrefix;\r\n    image = config.siteUrl + realPrefix + image;\r\n    const blogURL = config.siteUrl + config.pathPrefix;\r\n    const schemaOrgJSONLD = [\r\n      {\r\n        \"@context\": \"http://schema.org\",\r\n        \"@type\": \"WebSite\",\r\n        url: blogURL,\r\n        name: title,\r\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\"\r\n      }\r\n    ];\r\n    if (postSEO) {\r\n      schemaOrgJSONLD.push([\r\n        {\r\n          \"@context\": \"http://schema.org\",\r\n          \"@type\": \"BreadcrumbList\",\r\n          itemListElement: [\r\n            {\r\n              \"@type\": \"ListItem\",\r\n              position: 1,\r\n              item: {\r\n                \"@id\": postURL,\r\n                name: title,\r\n                image\r\n              }\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          \"@context\": \"http://schema.org\",\r\n          \"@type\": \"BlogPosting\",\r\n          url: blogURL,\r\n          name: title,\r\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\r\n          headline: title,\r\n          image: {\r\n            \"@type\": \"ImageObject\",\r\n            url: image\r\n          },\r\n          description\r\n        }\r\n      ]);\r\n    }\r\n    return (\r\n      <Helmet>\r\n        {/* General tags */}\r\n        <meta name=\"description\" content={description} />\r\n        <meta name=\"image\" content={image} />\r\n\r\n        {/* Schema.org tags */}\r\n        <script type=\"application/ld+json\">\r\n          {JSON.stringify(schemaOrgJSONLD)}\r\n        </script>\r\n\r\n        {/* OpenGraph tags */}\r\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\r\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\r\n        <meta property=\"og:title\" content={title} />\r\n        <meta property=\"og:description\" content={description} />\r\n        <meta property=\"og:image\" content={image} />\r\n        <meta\r\n          property=\"fb:app_id\"\r\n          content={config.siteFBAppID ? config.siteFBAppID : \"\"}\r\n        />\r\n\r\n        {/* Twitter Card tags */}\r\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n        <meta\r\n          name=\"twitter:creator\"\r\n          content={config.userTwitter ? config.userTwitter : \"\"}\r\n        />\r\n        <meta name=\"twitter:title\" content={title} />\r\n        <meta name=\"twitter:description\" content={description} />\r\n        <meta name=\"twitter:image\" content={image} />\r\n      </Helmet>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SEO;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport \"./MainHeader.css\";\r\n\r\nclass MainHeader extends React.Component {\r\n  render() {\r\n    const { children, cover } = this.props;\r\n\r\n    const classes = classNames(\"main-header\", this.props.className, {\r\n      \"no-cover\": !cover\r\n    });\r\n\r\n    const getStyle = () => {\r\n      if (cover) {\r\n        return { backgroundImage: `url(\"${cover}\")` };\r\n      }\r\n      return null;\r\n    };\r\n\r\n    return (\r\n      <header className={classes} style={getStyle()}>\r\n        {children}\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainHeader;\r\n","import React from \"react\";\r\nimport \"./AuthorImage.css\";\r\n\r\nclass AuthorImage extends React.Component {\r\n  render() {\r\n    const { name, image, url } = this.props.author;\r\n    if (image) {\r\n      return (\r\n        <figure className=\"author-image\">\r\n          <a\r\n            className=\"img\"\r\n            href={url}\r\n            style={{ backgroundImage: `url(\"${image}\")` }}\r\n          >\r\n            <span className=\"hidden\">{`${name}'s Picture`}</span>\r\n          </a>\r\n        </figure>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default AuthorImage;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport \"./AuthorMeta.css\";\r\n\r\nclass AuthorMeta extends React.Component {\r\n  render() {\r\n    const { children, className } = this.props;\r\n    const classes = classNames(\"author-meta\", className);\r\n\r\n    return <div className={classes}>{children}</div>;\r\n  }\r\n}\r\n\r\nexport default AuthorMeta;\r\n","import React from \"react\";\r\n\r\nclass AuthorLocation extends React.Component {\r\n  render() {\r\n    const { location } = this.props;\r\n    if (location) {\r\n      return <span className=\"author-location icon-location\">{location}</span>;\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default AuthorLocation;\r\n","import React from \"react\";\r\n\r\nclass AuthorWebsite extends React.Component {\r\n  render() {\r\n    const { url } = this.props;\r\n    if (url) {\r\n      return (\r\n        <span className=\"author-link icon-link\">\r\n          <a href={url}>{url}</a>\r\n        </span>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default AuthorWebsite;\r\n","import React from \"react\";\r\nimport \"./PostFooter.css\";\r\n\r\nclass PostFooter extends React.Component {\r\n  render() {\r\n    const { children } = this.props;\r\n    return <footer className=\"post-footer\">{children}</footer>;\r\n  }\r\n}\r\n\r\nexport default PostFooter;\r\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport \"./AuthorInfo.css\";\r\nimport AuthorMeta from \"../../components/AuthorMeta/AuthorMeta\";\r\nimport AuthorLocation from \"../AuthorLocation/AuthorLocation\";\r\nimport AuthorWebsite from \"../AuthorWebsite/AuthorWebsite\";\r\nimport AuthorLink from \"../AuthorLink/AuthorLink\";\r\n\r\nconst Bio = props => {\r\n  const { bio, morePostsUrl } = props;\r\n  if (bio) {\r\n    return <p>{bio}</p>;\r\n  }\r\n  return (\r\n    <p>\r\n      Read <Link to={morePostsUrl}>more posts</Link> by this author.\r\n    </p>\r\n  );\r\n};\r\n\r\nclass AuthorInfo extends React.Component {\r\n  render() {\r\n    const { prefix } = this.props;\r\n    const { uid, name, image, bio, url, location } = this.props.author;\r\n    const authorInfoUrl = prefix ? `${prefix}/${uid}` : uid;\r\n    if (image) {\r\n      return (\r\n        <section className=\"author\">\r\n          <h4>\r\n            <AuthorLink url={authorInfoUrl} name={name} />\r\n          </h4>\r\n          <Bio bio={bio} morePostsUrl={authorInfoUrl} />\r\n          <AuthorMeta>\r\n            <AuthorLocation location={location} />\r\n            <AuthorWebsite url={url} />\r\n          </AuthorMeta>\r\n        </section>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default AuthorInfo;\r\n","import React from \"react\";\r\nimport { ShareButtons } from \"react-share\";\r\nimport \"./PostShare.css\";\r\n\r\nconst formatSiteUrl = (siteUrl, pathPrefix, path) =>\r\n  siteUrl + (pathPrefix === \"/\" ? \"\" : pathPrefix) + path;\r\n\r\n// const getCover = post => {\r\n//   const { cover } = post;\r\n//   if (cover && cover.childImageSharp && cover.childImageSharp.original) {\r\n//     return cover.childImageSharp.original.src;\r\n//   }\r\n//   return \"\";\r\n// };\r\n\r\nclass PostShare extends React.Component {\r\n  render() {\r\n    const { postNode, postPath, config } = this.props;\r\n    const post = postNode.frontmatter;\r\n    const url = formatSiteUrl(config.siteUrl, config.pathPrefix, postPath);\r\n\r\n    const {\r\n      FacebookShareButton,\r\n      GooglePlusShareButton,\r\n      // PinterestShareButton,\r\n      TwitterShareButton\r\n    } = ShareButtons;\r\n\r\n    return (\r\n      <section className=\"share\">\r\n        <h4>Share this post</h4>\r\n        <div style={{ display: \"flex\" }}>\r\n          <TwitterShareButton url={url} title={post.title}>\r\n            <a className=\"icon-twitter\" style={{ fontSize: \"1.4em\" }}>\r\n              <span className=\"hidden\">Twitter</span>\r\n            </a>\r\n          </TwitterShareButton>\r\n          <FacebookShareButton url={url} quote={post.title}>\r\n            <a className=\"icon-facebook\" style={{ fontSize: \"1.4em\" }}>\r\n              <span className=\"hidden\">Facebook</span>\r\n            </a>\r\n          </FacebookShareButton>\r\n          {/* <PinterestShareButton */}\r\n          {/* url={url} */}\r\n          {/* media={formatSiteUrl( */}\r\n          {/* config.siteUrl, */}\r\n          {/* config.pathPrefix, */}\r\n          {/* getCover(post) */}\r\n          {/* )} */}\r\n          {/* description={postNode.excerpt} */}\r\n          {/* > */}\r\n          {/* <a className=\"icon-pinterest\" style={{ fontSize: \"1.4em\" }}> */}\r\n          {/* <span className=\"hidden\">Pinterest</span> */}\r\n          {/* </a> */}\r\n          {/* </PinterestShareButton> */}\r\n          <GooglePlusShareButton url={url}>\r\n            <a className=\"icon-google-plus\" style={{ fontSize: \"1.4em\" }}>\r\n              <span className=\"hidden\">Google+</span>\r\n            </a>\r\n          </GooglePlusShareButton>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostShare;\r\n","import React from \"react\";\r\nimport \"./GhostSubscribe.css\";\r\n\r\nclass GhostSubscribe extends React.Component {\r\n  render() {\r\n    const { subscribers, blog } = this.props;\r\n    // const subscribeFormPlaceholder = \"Your email address\";\r\n    if (subscribers && blog) {\r\n      // Email subscribe form at the bottom of the page\r\n      return (\r\n        <section className=\"gh-subscribe\">\r\n          <h3 className=\"gh-subscribe-title\">Subscribe to {blog.title}</h3>\r\n          <p>Get the latest posts delivered right to your inbox.</p>\r\n          <span className=\"gh-subscribe-rss\">\r\n            or subscribe{\" \"}\r\n            <a href=\"http://cloud.feedly.com/#subscription/feed/{blog.url}/rss/\">\r\n              via RSS\r\n            </a>{\" \"}\r\n            with Feedly!\r\n          </span>\r\n        </section>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default GhostSubscribe;\r\n","import React, { Component } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { Link } from \"gatsby\";\r\nimport \"./ReadNext.css\";\r\n\r\nconst ReadNextStory = props => {\r\n  const { post } = props;\r\n  if (post) {\r\n    /** Limit words to 19 in GraphQL * */\r\n    const { path, cover, title, excerpt } = post;\r\n    const styles = cover ? { backgroundImage: `url(${cover}` } : null;\r\n    const classes = classNames(\"read-next-story\", props.className, {\r\n      \"no-cover\": !cover\r\n    });\r\n    return (\r\n      <Link className={classes} style={styles} to={path}>\r\n        <section className=\"post\">\r\n          <h2>{title}</h2>\r\n          <p>{excerpt}&hellip;</p>\r\n        </section>\r\n      </Link>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\n/**\r\n * Links to Previous/Next posts\r\n */\r\nclass ReadNext extends Component {\r\n  render() {\r\n    const { next, prev } = this.props;\r\n    return (\r\n      <aside className=\"read-next\">\r\n        <ReadNextStory post={next} />\r\n        <ReadNextStory className=\"prev\" post={prev} />\r\n      </aside>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReadNext;\r\n","import React, { Component } from \"react\";\r\nimport ReactDisqusComments from \"react-disqus-comments\";\r\nimport config from \"../../../data/SiteConfig\";\r\n\r\nclass Disqus extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      toasts: []\r\n    };\r\n    this.notifyAboutComment = this.notifyAboutComment.bind(this);\r\n    this.onSnackbarDismiss = this.onSnackbarDismiss.bind(this);\r\n  }\r\n\r\n  onSnackbarDismiss() {\r\n    const [, ...toasts] = this.state.toasts;\r\n    this.setState({ toasts });\r\n  }\r\n  notifyAboutComment() {\r\n    const toasts = this.state.toasts.slice();\r\n    toasts.push({ text: \"New comment available!\" });\r\n    this.setState({ toasts });\r\n  }\r\n  render() {\r\n    const { postNode } = this.props;\r\n    if (!config.disqusShortname) {\r\n      return null;\r\n    }\r\n    const post = postNode.frontmatter;\r\n    const url = config.siteUrl + config.pathPrefix + postNode.fields.slug;\r\n    return (\r\n      <ReactDisqusComments\r\n        shortname={config.disqusShortname}\r\n        identifier={post.title}\r\n        title={post.title}\r\n        url={url}\r\n        category_id={post.category_id}\r\n        onNewComment={this.notifyAboutComment}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Disqus;\r\n"],"sourceRoot":""}